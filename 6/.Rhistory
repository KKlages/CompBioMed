install.packages(‘snpStats’)
install.packages(snpStats)
install.packages("snpStats")
R.version.string
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("snpStats")
source("~/.active-rstudio-document")
source("F:/CoBi/BioMed/Tutorial/4/Übung4.R")
install.packages('R.utils')
options(device = "windows")  # For Windows
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("maftools")
library(maftools)
laml.maf = system.file('extdata', 'tcga_laml.maf.gz', package = 'maftools')
laml.clin = system.file('extdata', 'tcga_laml_annot.tsv', package = 'maftools')
laml = read.maf(maf = laml.maf, clinicalData = laml.clin)
samplesummary =getSampleSummary(laml)
genesummary=getGeneSummary(laml)
clinicalsummary =getClinicalData(laml)
plotmafSummary(maf = laml)
install.packages("R.utils")
source("F:/CoBi/BioMed/Tutorial/4/Übung4.R")
install.packages("R.utils")
setwd("F:/CoBi/BioMed/Tutorial/6")
installed.packages(“edgeR”, “limma”, “Glimma”, “gplots”, “org.Mm.eg.db”, “GO.db”, and
installed.packages("edgeR", "limma", "Glimma", "gplots", "org.Mm.eg.db", "GO.db", and
"RColorBrewer")
installed.packages(c("edgeR", "limma", "Glimma", "gplots", "org.Mm.eg.db", "GO.db", and
"RColorBrewer"))
install.packages(c("edgeR", "limma", "Glimma", "gplots", "RColorBrewer"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("org.Mm.eg.db", "GO.db"))
?read.delim
sampleinfo = read.delim(SampleInfo.txta)
sampleinfo = read.delim(SampleInfo.txt)
setwd("F:/CoBi/BioMed/Tutorial/6")
sampleinfo = read.delim(SampleInfo.txt)
sampleinfo = read.delim(SampleInfo.txt)
sampleinfo = read.delim(SampleInfo.txt)
sampleinfo = read.delim(SampleInfo.txt)
sampleinfo = read.delim("SampleInfo.txt")
View(sampleinfo)
?read.delim
names = sampleinfo[2,]
View(names)
names = sampleinfo[,2]
View(sampleinfo)
sampleinfo = read.delim("SampleInfo.txt", row.names=names)
View(sampleinfo)
?df
sampleinfo = sampleinfo[3-4]
View(sampleinfo)
sampleinfo = read.delim("SampleInfo.txt")
names = sampleinfo[,2]
sampleinfo = read.delim("SampleInfo.txt", row.names=names)
sampleinfo = read.delim("SampleInfo.txt")
names = sampleinfo[,2]
sampleinfo_names = read.delim("SampleInfo.txt", row.names=names)
sampleinfo_clean = sampleinfo_names[3-4]
View(sampleinfo_clean)
sampleinfo_clean = sampleinfo_names[4-4]
sampleinfo_clean = sampleinfo_names[3:4]
View(sampleinfo_clean)
View(sampleinfo)
View(sampleinfo_clean)
View(sampleinfo_names)
print(rownames(sampleinfo))
print(rownames(sampleinfo_names))
print((sampleinfo[,2]))
rownames(sampleinfo_names) = (sampleinfo[,2])
identical((sampleinfo_names) = (sampleinfo[,2]))
identical(rownames(sampleinfo_names) = (sampleinfo[,2]))
identical(rownames(sampleinfo_clean), sampleinfo[, 2])
seqdata = read.delim("GSE60450 Lactation-GenewiseCounts.txt"))
seqdata = read.delim("GSE60450 Lactation-GenewiseCounts.txt")
seqdata = read.delim("GSE60450_Lactation-GenewiseCounts.txt")
View(seqdata)
seqdata = read.delim("GSE60450_Lactation-GenewiseCounts.txt",row.names=EntrezGeneID)
seqdata = read.delim("seqdata",row.names=EntrezGeneID)
rownames(seqfata) = seqfata[,1]
rownames(seqdata) = seqdata[,1]
library(dplyr)
seqdata = select(seqdata, -1,-2)
col_names_seqdata = colnames(seqdata)
names = sampleinfo[,2]
identical(col_names_seqdata, sampleinfo[, 2])
seqdata <- read.delim("GSE60450_Lactation-GenewiseCounts.txt", row.names = "EntrezGeneID")
seqdata <- seqdata[, -c(1, 2)]  # Remove first two columns
# Check column names of seqdata
col_names_seqdata <- colnames(seqdata)
# Load and clean sample info
sampleinfo <- read.delim("SampleInfo.txt")
names <- sampleinfo[, 2]
identical(col_names_seqdata, names)  # Check if column names match
# Clean sampleinfo
sampleinfo_clean <- sampleinfo[3:4, ]  # Select rows 3 and 4 (adjust as needed)
# Set row names for sampleinfo
rownames(sampleinfo) <- sampleinfo[, 2]
# Verify row names
print(rownames(sampleinfo))
print(sampleinfo[, 2])
identical(rownames(sampleinfo), sampleinfo[, 2])
col_names_seqdata= substr(col_names_seqdata, 1, 7)
colnames(seqdata) = col_names_seqdata
?arrange
seqdata %>% arrange(sampleinfo[, 2])
seqdata <- seqdata[, sampleinfo[, 2]]
seqdata(order(rownames(sampleinfo)))
seqdata[(order(rownames(sampleinfo))]
seqdata = seqdata[,order(rownames(sampleinfo))]
seqdata <- seqdata[, sampleinfo[, 2]]
seqdata <- seqdata[, sampleinfo[, 2]]
print(names)
names <- c(sampleinfo[, 2])
names
names = c(rownames(sampleinfo))
namesv = c(rownames(sampleinfo))
class(namesv)
seqdata <- seqdata[, names]
seqdata <- seqdata[, namesv]
all(namesv %in% colnames(seqdata))
print(colnames(seqdata))
print(names)
seqdata <- read.delim("GSE60450_Lactation-GenewiseCounts.txt", row.names = "EntrezGeneID")
seqdata <- seqdata[, -c(1,)]  # Remove first two columns
seqdata <- seqdata[, -c(1)]  # Remove first two columns
print(colnames(seqdata))
print(names)
col_names_seqdata <- colnames(seqdata)
col_names_seqdata= substr(col_names_seqdata, 1, 7)
colnames(seqdata) = col_names_seqdata
seqdata <- seqdata[, namesv]
print(colnames(seqdata))
print(colnames(seqdata))
print(names)
names <- c(sampleinfo[, 2])
View(sampleinfo)
cpm?
?cpm
??cpm()
library(limma)
install.packages(c("edgeR", "limma", "Glimma", "gplots", "RColorBrewer"))
library(dplyr)
library(limma)
installed.packages("limma")
"limma" %in% rownames(installed.packages())
BiocManager::install("limma")
BiocManager::install("Glimma")
?cpm
library(edgeR)
?cpm
##############
#3#
############
a = cpm(seqdata)
View(a)
myCPM = cpm(seqdata)
plot(myCPM)
# Calculate the total count for each sample (i.e., library size)
library_sizes_raw <- colSums(seqdata)
# Calculate CPM values
myCPM <- cpm(seqdata)
# Calculate the total CPM for each sample (library size in CPM)
library_sizes_cpm <- colSums(myCPM)
# Create a data frame for plotting
library_sizes_df <- data.frame(
Sample = colnames(seqdata),
Raw_Library_Size = library_sizes_raw,
CPM_Library_Size = library_sizes_cpm
)
# Reshape data for better visualization
library_sizes_long <- reshape(library_sizes_df,
varying = c("Raw_Library_Size", "CPM_Library_Size"),
v.names = "Library_Size",
times = c("Raw", "CPM"),
timevar = "Transformation",
direction = "long")
# Plot the library sizes
library(ggplot2)
ggplot(library_sizes_long, aes(x = Sample, y = Library_Size, fill = Transformation)) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Library Sizes Before and After CPM Transformation",
x = "Sample",
y = "Library Size") +
scale_fill_manual(values = c("Raw" = "blue", "CPM" = "red"))
